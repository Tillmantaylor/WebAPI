name: Build and deploy .NET solution to Web API and MVC Azure App Services

env:
  API_AZURE_WEBAPP_NAME: 'SE2MonitoringWebAPI'
  MVC_AZURE_WEBAPP_NAME: 'MonitoringMvcWebApp'
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'
  API_PUBLISH_PROFILE: '<publishData><publishProfile profileName="SE2MonitoringWebAPI - Web Deploy" publishMethod="MSDeploy" publishUrl="se2monitoringwebapi.scm.azurewebsites.net:443" msdeploySite="SE2MonitoringWebAPI" userName="$SE2MonitoringWebAPI" userPWD="D94dSpgMigbBYopj0aHu0hlaGYP9bT95gxqfgT1lsR5jdXZNcGew496KcCYd" destinationAppUrl="http://se2monitoringwebapi.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="SE2MonitoringWebAPI - FTP" publishMethod="FTP" publishUrl="ftp://waws-prod-blu-263.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="SE2MonitoringWebAPI\$SE2MonitoringWebAPI" userPWD="D94dSpgMigbBYopj0aHu0hlaGYP9bT95gxqfgT1lsR5jdXZNcGew496KcCYd" destinationAppUrl="http://se2monitoringwebapi.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="SE2MonitoringWebAPI - Zip Deploy" publishMethod="ZipDeploy" publishUrl="se2monitoringwebapi.scm.azurewebsites.net:443" userName="$SE2MonitoringWebAPI" userPWD="D94dSpgMigbBYopj0aHu0hlaGYP9bT95gxqfgT1lsR5jdXZNcGew496KcCYd" destinationAppUrl="http://se2monitoringwebapi.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
  MVC_PUBLISH_PROFILE: '<publishData><publishProfile profileName="MonitoringMvcWebApp - Web Deploy" publishMethod="MSDeploy" publishUrl="monitoringmvcwebapp.scm.azurewebsites.net:443" msdeploySite="MonitoringMvcWebApp" userName="$MonitoringMvcWebApp" userPWD="yysu0DwgWXac0sAlk4iqD6X8hE4gmuKdzjSLfLnvSjjAN74zpKAxbfwAX901" destinationAppUrl="http://monitoringmvcwebapp.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="MonitoringMvcWebApp - FTP" publishMethod="FTP" publishUrl="ftp://waws-prod-blu-263.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="MonitoringMvcWebApp\$MonitoringMvcWebApp" userPWD="yysu0DwgWXac0sAlk4iqD6X8hE4gmuKdzjSLfLnvSjjAN74zpKAxbfwAX901" destinationAppUrl="http://monitoringmvcwebapp.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="MonitoringMvcWebApp - Zip Deploy" publishMethod="ZipDeploy" publishUrl="monitoringmvcwebapp.scm.azurewebsites.net:443" userName="$MonitoringMvcWebApp" userPWD="yysu0DwgWXac0sAlk4iqD6X8hE4gmuKdzjSLfLnvSjjAN74zpKAxbfwAX901" destinationAppUrl="http://monitoringmvcwebapp.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
  # TODO: Replace publish-profile values with ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} and configure as a GitHub secret
  
on:
  push:
    branches: [master, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Publish Web API
        run: dotnet build petStoreWebAPI/petStoreWebAPI.csproj --no-restore --configuration Release; dotnet publish petStoreWebAPI/petStoreWebAPI.csproj -c Release -o ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/webapi

      - name: Build and Publish MVC
        run: dotnet build petStoreMonitoringApp/petStoreMonitoringApp.csproj --no-restore --configuration Release; dotnet publish petStoreMonitoringApp/petStoreMonitoringApp.csproj -c Release -o ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/mvc

      - name: Temporary log for troubleshooting
        run: ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI; ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/petStoreWebAPI; ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/petStoreMonitoringApp
        
      - name: Temp log
        run: ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/mvc/; ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/petStoreMonitoringApp; ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/petStoreWebAPI

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app-webapi
          path: ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/webapi
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app-mvc
          path: ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/mvc

  deploy-web-api:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Monitoring Web API'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          
      - name: Temporary log for troubleshooting
        run: ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI; ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/petStoreWebAPI

      - name: Deploy to Azure Web App API
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.API_AZURE_WEBAPP_NAME }}
          publish-profile: ${{ env.API_PUBLISH_PROFILE }}   #TODO: change to GitHub secret
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/webapi

  deploy-mvc:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Monitoring MVC'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          
      - name: Temporary log for troubleshooting
        run: ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI; ls -l /home/runner/work/petStoreWebAPI/petStoreWebAPI/petStoreMonitoringApp
      
      - name: Deploy to Azure Web App MVC
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.MVC_AZURE_WEBAPP_NAME }}
          publish-profile: ${{ env.MVC_PUBLISH_PROFILE }}   #TODO: change to GitHub secret
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/mvc
